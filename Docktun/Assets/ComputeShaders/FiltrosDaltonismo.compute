// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSDeuteranopia

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float4> Source;
RWTexture2D<float4> Result;
int2 SourceTextureSize;

// type of colorblindness:
// 0: Protanopia
// 1: Protanomalia
// 2: Deuteranopia
// 3: Deuteranomalia
// 4: Tritanopia
// 5: Tritanomalia
// 6: Acromatopia
// 7: Acromatomalia
int type = 0;

[numthreads(8,8,1)]
void CSDeuteranopia(uint3 id : SV_DispatchThreadID)
{
    float4 color = Source.Load(int3(id.xy, 0));

    float r = color.r;
    float g = color.g;
    float b = color.b;

    float3x3 filterMatrix;

    if (type < 0 || type > 7)type = 0;

    if (type == 0) { // Protanopia
        filterMatrix = float3x3(
            0.567, 0.558, 0.0,
            0.433, 0.442, 0.242,
            0.0, 0.0, 0.758
            );
    }
    else if (type == 1) { // Protanomalia
        filterMatrix = float3x3(
            0.817, 0.333, 0.0,
            0.183, 0.667, 0.0,
            0.0, 0.125, 0.875
            );
    }
    else if (type == 2) { // Deuteranopia
        filterMatrix = float3x3(
            0.625, 0.7, 0.0,
            0.375, 0.3, 0.3,
            0.0, 0.0, 0.7
            );
    }
    else if (type == 3) { // Deuteranomalia
        filterMatrix = float3x3(
            0.8, 0.258, 0.0,
            0.2, 0.742, 0.142,
            0.0, 0.0, 0.858
            );
    }
    else if (type == 4) { // Tritanopia
        filterMatrix = float3x3(
            0.95, 0.0, 0.0,
            0.05, 0.433, 0.475,
            0.0, 0.567, 0.525
            );
    }
    else if (type == 5) { // Tritanomalia
        filterMatrix = float3x3(
            0.967, 0.0, 0.0,
            0.033, 0.733, 0.183,
            0.0, 0.267, 0.817
            );
    }
    else if (type == 6) { // Acromatopia
        filterMatrix = float3x3(
            0.299, 0.299, 0.299,
            0.587, 0.587, 0.587,
            0.114, 0.114, 0.114
            );
    }
    else if (type == 7) { // Acromatomalia
        filterMatrix = float3x3(
            0.618, 0.163, 0.163,
            0.320, 0.775, 0.320,
            0.062, 0.062, 0.516
            );
    }

    float3 transformed = mul(float3(r, g, b), filterMatrix);

    // Voltear la imagen en el eje Y, ya que ReadPixels de Texture2D tiene
    // el (0,0) en la esquina inferior izq mientras que PNG lo tiene en
    // la superior izq.
    uint2 flippedCoord = id.xy;
    flippedCoord.y = SourceTextureSize.y - 1 - id.y;

    Result[flippedCoord] = float4(transformed, color.a);
}
